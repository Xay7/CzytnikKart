// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WypozyczalniaFilmow.DAL;

namespace Czytnik123.Migrations
{
    [DbContext(typeof(CardsContext))]
    [Migration("20220325133630_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Czytnik.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardSerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardSerialNumber = "13123"
                        },
                        new
                        {
                            Id = 2,
                            CardSerialNumber = "45745754"
                        },
                        new
                        {
                            Id = 3,
                            CardSerialNumber = "546"
                        },
                        new
                        {
                            Id = 4,
                            CardSerialNumber = "457547"
                        },
                        new
                        {
                            Id = 5,
                            CardSerialNumber = "547547"
                        });
                });

            modelBuilder.Entity("Czytnik.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "123"
                        },
                        new
                        {
                            Id = 2,
                            Name = "1233"
                        },
                        new
                        {
                            Id = 3,
                            Name = "1243"
                        },
                        new
                        {
                            Id = 4,
                            Name = "1253"
                        },
                        new
                        {
                            Id = 5,
                            Name = "1263"
                        });
                });

            modelBuilder.Entity("Czytnik.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Jan",
                            Surname = "Kowalski"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kowalski",
                            Surname = "Jan"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Oliwia",
                            Surname = "Nowak"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Janusz",
                            Surname = "Kartka"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Oliwier",
                            Surname = "Zeszyt"
                        });
                });

            modelBuilder.Entity("Czytnik.Models.UserRooms", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("UserRooms");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoomId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoomId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoomId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoomId = 3
                        },
                        new
                        {
                            UserId = 3,
                            RoomId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoomId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoomId = 3
                        },
                        new
                        {
                            UserId = 3,
                            RoomId = 4
                        },
                        new
                        {
                            UserId = 2,
                            RoomId = 4
                        });
                });

            modelBuilder.Entity("Czytnik.Models.UserRooms", b =>
                {
                    b.HasOne("Czytnik.Models.Room", "Room")
                        .WithMany("UserRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Czytnik.Models.User", "User")
                        .WithMany("UserRooms")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Czytnik.Models.Room", b =>
                {
                    b.Navigation("UserRooms");
                });

            modelBuilder.Entity("Czytnik.Models.User", b =>
                {
                    b.Navigation("UserRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
