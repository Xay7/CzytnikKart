#include<ESP8266WiFi.h>
#include<PubSubClient.h>
#include <SPI.h>
#include <MFRC522.h>


#define BAUDRATE 115200
#define SS_PIN D8
#define RST_PIN D4
MFRC522 mfrc522(SS_PIN, RST_PIN);   //new MFRC522 instance.

const char* ssid = "NETGEAR92";
const char* pass = "deepphoenix404";
const char* mqttServer = "192.168.1.3";
const int mqttPort = 1883;
const char* esp8266_board1 = "ESP8266-1";

WiFiClient esp_board;
PubSubClient mqtt_client(esp_board);

void setup() {
Serial.begin(BAUDRATE);
WiFi.begin(ssid,pass);
Serial.print("Connecting to "); Serial.print(ssid); Serial.print("with password "); Serial.println(pass);
Serial.print("Start connection .");
while(WiFi.status()!= WL_CONNECTED) {
  delay(500);
  Serial.print("."); }
Serial.print("ESP8266 board IP "); Serial.print(WiFi.localIP());
mqtt_client.setServer(mqttServer,mqttPort);
Serial.print("Connecting to MQTT server/broker ");
while(!mqtt_client.connected()) {
  if(mqtt_client.connect(esp8266_board1)) {
    Serial.println("... connected");  
  } else {
    Serial.print("... failed ");
    Serial.println(mqtt_client.state());
    delay(1000);
  }
   Serial.begin(BAUDRATE);   
 SPI.begin();             
 mfrc522.PCD_Init();
 Serial.println("Close a RFID tag/card to the reader");
}
}

long p_millis = 0;
int i=0;
String message;
String tag_uid = "";
byte number;

#define MAIN_DELAY 1000

void loop() {
if(millis() - p_millis > MAIN_DELAY) {
  message = "Interation" + String(i++);
//  mqtt_client.publish("test",message.c_str());
  p_millis = millis();
}

 if(!mfrc522.PICC_IsNewCardPresent()) 
  return;
  
 if(!mfrc522.PICC_ReadCardSerial()) 
  return;

 Serial.print("UID ");
 for(int i = 0; i < (int)mfrc522.uid.size; i++) {
  Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? " 0 " : " ");
  Serial.print(mfrc522.uid.uidByte[i], HEX);
  tag_uid.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? " 0" : " "));
  tag_uid.concat(String(mfrc522.uid.uidByte[i], HEX));
  }
 
  if (tag_uid.substring(1) == " 74 A2 A1 EA") {
    Serial.println("\nTag identification correct");
   }
  else {
   Serial.println("\nUnknown tag");
    mqtt_client.publish("room1", tag_uid.c_str());
    Serial.println("sent");
  }

}